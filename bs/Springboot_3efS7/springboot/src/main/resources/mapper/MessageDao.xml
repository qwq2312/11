<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="springboot.dao.MessageDao">

    <resultMap type="springboot.entity.MessageEntity" id="messageMap">
        <result property="id" column="id"/>
        <result property="fromId" column="from_id"/>
        <result property="toId" column="to_id"/>
        <result property="type" column="type"/>
        <result property="contentType" column="content_type"/>
        <result property="contentId" column="content_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="username" column="username"/>
        <result property="touxiang" column="touxiang"/>
    </resultMap>
    <sql id="selectFields">
        `id`
        , `from_id`, `type`, `content_type`, `content_id`, `update_time`,`username`,`touxiang`
    </sql>
    <select id="listMessage" resultType="springboot.common.entity.Message">
        select * from (
        select
        <include refid="selectFields"/>
        from `message`
        where type = #{type} and `update_time` &lt; #{updateTime} and
        (to_id = #{toId}
        <if test="type == 0">
            and from_id = #{fromId}
            or from_id = #{toId} and to_id = #{fromId}
        </if>
        )
        order by update_time desc
        limit 0, #{count}
        ) as ms
        order by ms.update_time;
    </select>

</mapper>