/** * @ClassName CallPythonUtils * @Description 调用Python程序 * @Version 1.0 */package springboot.common.utils;import lombok.SneakyThrows;import org.springframework.core.io.ClassPathResource;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.HashMap;import java.util.Map;public class CallPythonUtils {	@SneakyThrows	public static Map<String, String> callPython() {		Map<String, String> res = new HashMap<>();		ClassPathResource classPathResource = new ClassPathResource("news.py");//		String[] command = {"python3", "/path/to/your/python/script.py", "arg1", "arg2"};		String[] arg = new String[]{"python3", classPathResource.getFile().getAbsolutePath()};//        打印出来的命令行，也是在bash或者cmd上执行的命令，可预先测试下		System.out.println("=======================command line=======================");		for (String s : arg) {			System.out.print(s + " ");		}		System.out.println("\n=======================command line=======================");		Process proc;		BufferedReader in = null;		try {			proc = Runtime.getRuntime().exec(arg); // 执行py文件			in = new BufferedReader(new InputStreamReader(proc.getInputStream(), "GBK"));			String line;			while ((line = in.readLine()) != null) {//                打印python脚本输出				System.out.println(line);				if (line.startsWith("{") && line.endsWith("}") && line.contains("msg") && line.contains("status")) {					return res;				}			}			in.close();		} catch (IOException e) {			System.out.println(e.getMessage());		} finally {			if (in != null) {				in.close();			}		}		return new HashMap<>();	}}